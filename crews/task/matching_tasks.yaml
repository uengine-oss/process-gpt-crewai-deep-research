design_activity_tasks:
  description: |
    **🔄 이전 결과물:** {previous_outputs}
    **💬 피드백:** {previous_feedback}
    **📋 현재 액티비티 이름:** "{topic}"
    **👥 우선 선정 에이전트:** {agent_info}
    **📚 전체 사용 가능 에이전트:** {available_agents}

    **작업 순서:**
    1. **이전 결과물 문맥 파악**: previous_outputs를 분석하여 이전에 무엇을 했는지, 어떤 목적과 요구사항이 있었는지 정확히 이해
    2. **피드백 우선 반영**: previous_feedback을 최우선으로 분석하여 사용자가 원하는 개선사항과 요구사항을 파악하고 이를 목차 생성에 적극 반영
    3. **목차 생성**: 피드백을 반영하여 목차를 구성하되, 특별한 요청이 없으면 기본 5개 섹션으로 논리적 구성 (서론→본론→결론)
    4. **에이전트 우선 매칭**: 
       - 1순위: agent_info(우선 선정 에이전트)에 있는 에이전트들을 최우선으로 활용하여 모든 목차에 배정(중복 허용)
       - 2순위: agent_info(우선 선정 에이전트)가 없는 경우, available_agents에서 전문성 기준으로 선정
    5. **Task 설계**: 이전 결과물 문맥과 피드백을 종합 반영한 구체적 작업 지시 작성

    **핵심 원칙:**
    - **피드백 최우선**: previous_feedback 내용을 가장 우선하여 목차와 내용 구성에 적극 반영
    - **문맥 연속성**: previous_outputs를 통해 이전 작업의 흐름을 파악하고 자연스럽게 연결
    - **에이전트 우선 순위**: agent_info 에이전트를 최우선으로 활용하여 모든 목차에 배정(중복 허용)
    - **에이전트 정보 원본 유지**: agent 필드(agent_id, name)를 원본 그대로 반환 (변형 금지)
    - **피드백 중심 내용 구성**: 현재 액티비티 이름은 무시하고, 반드시 피드백과 이전 결과물을 기반으로 내용 작성

    **중요 지침:**
    - 피드백이 있으면 그것이 목차 구성의 핵심 기준이 됨
    - 이전 결과물에서 목차가 5개 미만인 경우, 중간에 멈춘 것으로 판단하여 기본 5개로 구성
    - 보고서 논리적 흐름: 도입부(배경 및 개요) → 본론(핵심 내용) → 마무리(요약 및 결론)
    - 모든 TOC에는 반드시 에이전트가 매칭되어야 함 (빈값 금지)


  expected_output: |
    JSON 배열 형식으로 정확히 출력:
    [
      {
        "toc": {
           "title": "섹션 제목",
           "description": "구체적 내용과 범위 (2-3문장)"
         },
        "agent": {
          "agent_id": "원본 agent_id",
          "name": "원본 name"
        },
        "task": {
           "description": "피드백을 최우선 반영하여 이전 결과물 문맥과 연결된 구체적 작업 지시. 피드백 요구사항 적극 반영, 에이전트 전문성 활용, Markdown 형식",
           "expected_output": "Markdown 형식의 전문적 섹션 내용 (2000-3000단어). 피드백 반영된 실무 예시와 구체적 가이드라인 포함"
         }
      }
    ]
    
    **필수 사항**: 
    - agent_info 에이전트들을 최우선으로 활용하여 모든 목차에 배정
    - agent_info가 없는 경우에만 available_agents에서 선정
    - 에이전트 정보는 원본 그대로 반환 (agent_id, name 변형 금지)

  agent: toc_generator_and_agent_matcher 