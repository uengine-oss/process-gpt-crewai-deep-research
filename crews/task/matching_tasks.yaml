design_activity_tasks:
  description: |
    **🔄 이전 결과물:** {previous_outputs}
    **💬 피드백:** {previous_feedback}
    **📋 현재 액티비티 이름:** "{topic}"
    **👥 사용 가능 에이전트 목록(규칙 적용됨):** {available_agents}

    **작업 순서:**
    1. **이전 결과물 문맥 파악**: previous_outputs를 분석하여 이전에 무엇을 했는지, 어떤 목적과 요구사항이 있었는지 정확히 이해
    2. **피드백 우선 반영**: previous_feedback을 최우선으로 분석하여 사용자가 원하는 개선사항과 요구사항을 파악하고 이를 목차 생성에 적극 반영
    3. **목차 생성**: 피드백을 반영하여 목차를 구성하되, 특별한 요청이 없으면 기본 5개 섹션으로 논리적 구성 (서론→본론→결론)
    4. **에이전트 매칭(엄격 규칙)**:
       - 입력으로 전달된 `available_agents`만 사용합니다.
       - 다음 모든 항목을 종합 검토하여 섹션 주제에 가장 적합한 에이전트를 배정하세요:
         - name(이름), role(역할), goal(목표), persona(페르소나)
       - TOC 개수에 비해 관련도 높은 에이전트가 부족하면 동일 에이전트를 여러 섹션에 배정해도 됩니다.
    5. **Task 설계**: 이전 결과물 문맥과 피드백을 종합 반영한 구체적 작업 지시 작성

    **핵심 원칙:**
    - **피드백 최우선**: previous_feedback 내용을 가장 우선하여 목차와 내용 구성에 적극 반영
    - **문맥 연속성**: previous_outputs를 통해 이전 작업의 흐름을 파악하고 자연스럽게 연결
    - **에이전트 매칭 원칙**: `available_agents`만을 참조하여 섹션별 요구 역량과 가장 부합하는 에이전트를 배정
    - **MRP 금지**: 'mrp' 문자열(대소문자 무관)을 포함하는 에이전트는 어떤 경우에도 배정하지 않음
    - **에이전트 정보 원본 유지**: agent 필드(agent_id, name)를 원본 그대로 반환 (변형 금지)
    - **피드백 중심 내용 구성**: 현재 액티비티 이름은 무시하고, 반드시 피드백과 이전 결과물을 기반으로 내용 작성

    **중요 지침:**
    - 피드백이 있으면 그것이 목차 구성의 핵심 기준이 됨
    - 이전 결과물에서 목차가 5개 미만인 경우, 중간에 멈춘 것으로 판단하여 기본 5개로 구성
    - 보고서 논리적 흐름: 도입부(배경 및 개요) → 본론(핵심 내용) → 마무리(요약 및 결론)
    - 모든 TOC에는 반드시 에이전트가 매칭되어야 함 (빈값 금지)


  expected_output: |
    JSON 객체 형식으로 정확히 출력:
    {
      "sections": [
        {
          "toc": {
             "title": "섹션 제목",
             "description": "구체적 내용과 범위 (2-3문장)"
           },
          "agent": {
            "agent_id": "원본 agent_id",
            "name": "원본 name"
          },
          "task": {
             "description": "피드백을 최우선 반영하여 이전 결과물 문맥과 연결된 구체적 작업 지시. 피드백 요구사항 적극 반영, 에이전트 전문성 활용, Markdown 형식",
             "expected_output": "Markdown 형식의 전문적 섹션 내용 (2000-3000단어). 피드백 반영된 실무 예시와 구체적 가이드라인 포함"
           }
        }
      ],
      "explanation_text": "### TOC/에이전트 매칭 설명\n\n**TOC 요약**\n- 총 섹션 수: <숫자>\n- 섹션 목록: <'제목1', '제목2', ...>\n\n**목차 구성 근거**\n- 각 섹션을 이렇게 구성한 이유를 간단히 정리\n\n**에이전트 매칭 근거**\n- 섹션별 배정 에이전트와 선정 이유를 불릿으로 요약"
    }
    
    **출력 지시:**
    - sections: 위 스키마대로 TOC 섹션 배열과 에이전트 매칭 정보
    - explanation_text: 사람이 읽기 좋은 마크다운(제목/불릿/볼드)으로 기술하며, 다음을 반드시 포함:
      - 총 섹션 수
      - 섹션 제목 목록
      - 각 섹션 포함 이유와 해당 에이전트 선정 이유 (간결)
      - 코드블록은 사용하지 않음, 5~10줄 내외
    
    **필수 사항**:
    - `available_agents`만 사용하여 선정 (우선선정이 있으면 그 목록만, 없으면 전체 목록)
    - 이름/role/profile/persona 등 텍스트에 'mrp'(대소문자 무관)가 포함된 에이전트는 절대 사용 금지
    - 에이전트 정보는 원본 그대로 반환 (agent_id, name 변형 금지)

  agent: toc_generator_and_agent_matcher 