generate_field_value:
  description: >
    제공된 폼 타입 정보를 기반으로 전문적이고 실용적인 값을 생성하세요.
    
    **입력 정보**:
    - 리포트 내용 또는 이전 작업 내용: {report_content}
    - 피드백: {feedback}
    - 워크플로우 단계: {topic}
    - 폼 타입 정보: {form_type}
    - 폼 HTML 원본: {form_html}
    
    **핵심 규칙**:
    1. **폼 타입 기반 생성**: form_type 배열의 각 폼에 대해 key, type, text(폼 이름)을 분석하여 값 생성
    2. **타입별 적합성**: type과 text(폼 이름)을 모두 고려하여 적절한 형식의 값 생성
    3. **평면 JSON 구조**: 중첩 객체나 추가 필드 절대 금지
    4. **전문적 품질**: 구체적이고 상세한 값 생성
    5. **리포트 내용 활용**: report_content는 리포트 내용 또는 이전 결과물 중 하나가 전달됨
    6. **피드백 반영**: feedback이 제공되면 해당 피드백을 적극 반영하여 개선된 폼 값 생성
    7. **분리된 처리**: 리포트 내용과 피드백은 별도로 분석하여 각각의 목적에 맞게 활용
    8. **컨텍스트 활용**: 전달된 내용을 바탕으로 일관성 있는 값 생성
    9. **HTML 기반 항목 파싱**: form_html에서 해당 key의 위젯 정의를 찾아 items 등 선택지 정보를 활용합니다.
       - radio/select류: items 속성에서 선택 가능한 값 목록을 파싱하여 그중 하나만 사용합니다.
         예) items="[{'approve':'승인'},{'reject':'반려'}]" → 사용 가능한 값: "approve" 또는 "reject"
       - 항목의 라벨(한글)은 참고만 하고, 최종 값은 키(예: approve/reject)로 출력합니다.
    10. **라디오/선택형 우선 규칙**: type이 radio/select이고 form_html에 items가 있으면, 반드시 해당 items의 키 중 하나만 값으로 설정합니다.
    
    **타입별 값 생성 가이드**:
    - **text 타입**: 
      * 이름이 "수량", "개수", "건수" 등 → 숫자 (예: "15", "2024")
      * 이름이 "날짜", "기한", "시간" 등 → 날짜/시간 형식 (예: "2024년 12월 25일")
      * 이름이 "이름", "제목", "분류" 등 → 간단한 텍스트
      * 이름이 "금액", "비용", "가격" 등 → 숫자와 단위 (예: "1,500,000원")
    - **textarea 타입**: 상세한 설명이나 긴 텍스트 (여러 줄, 구체적 내용)
    - **radio/select 타입**: form_html의 items에서 파싱한 유효한 값 중 하나를 선택하여 설정
    
    **사용자 관련 필드**: 전달된 내용을 분석하여, 정확히 가져오기 (이름, 부서, 직급, 이메일 등)
    
    **중요**: 폼 name을 면밀히 분석하여 의미에 맞는 실용적인 값을 생성하세요. 
    예시: name이 "수량"이면 type이 text여도 숫자를 생성해야 합니다.
    
  expected_output: >
    form_type 배열의 각 폼 key를 JSON 키로 사용하는 평면 JSON 객체.
    
    **출력 형식**:
    {
      "form_key_1": "name과_type에_맞는_실용적_값",
      "form_key_2": "컨텍스트에_적합한_구체적_값"
    }
    
    **필수 준수사항**:
    - form_type에 있는 모든 key 포함
    - form_type에 없는 키는 절대 추가 금지
    - 중첩 구조나 그룹화 절대 금지
    - 유효한 JSON 형식 출력 
    - radio/select은 반드시 form_html의 items 키 중 하나로 값 설정