design_activity_tasks:
  description: |
    **🔄 이전 컨텍스트와 피드백:** {previous_context}
    **📋 현재 액티비티 이름:** "{topic}"
    **👥 우선 선정 에이전트:** {agent_info}
    **📚 전체 사용 가능 에이전트:** {available_agents}

    **작업 순서:**
    1. **컨텍스트 분석**: 이전 작업의 목적, 요구사항, 결과, 피드백을 파악하여 현재 액티비티에서 달성해야 할 구체적 목표 도출
    2. **TOC 설계**: 특별한 요청이 있지않는 한 기본 값으로는 5개 핵심 섹션으로 논리적 목차 구성 (서론→본론→결론)
    3. **에이전트 매칭**: agent_info 우선 배정 후, available_agents에서 전문성 기준으로 추가 선정
    4. **Task 설계**: 각 에이전트별로 이전 컨텍스트와 피드백을 반영한 구체적 작업 지시

    **핵심 원칙:**
    - **피드백 절대 반영**: 이전 단계의 피드백이 특정 에이전트 대상인지 전역적인지 구분하여 반드시 적용, 피드백을 우선으로 반영 하여 내용을 구성
    - **에이전트 정본 원본 유지**: 모든 agent 필드(agent_id, name, role, goal, persona, tool_names, agent_profile, model)를 원본 그대로 반환 (변형 금지)
    - **흐름 연속성**: 원래 목적과 요구사항을 현재 액티비티에 일관되게 유지
    - **중복 방지**: 1개 섹션당 1개 에이전트만 배정
    - **현재 액티비티 이름은 무시** : 이건 그저 현재 단계 이름으로, 이거에 맞춰서 내용을 작성하는게 아니라 내용은 반드시, 이전 컨텍스트 내용과 피드백을 반영하여 작성

    "중요" : 이전 컨텍스트에서 목차가 5개 미만인 경우, 그건 중간에 생성되다가 멈춘것으로 반드시 목차는 기본 값 5개입니다.
    !! 서론(개요)와 결론 TOC 목차는 반드시 필수로 생성하세요.

  expected_output: |
    JSON 배열 형식으로 정확히 출력:
    [
      {
        "toc": {
           "title": "섹션 제목",
           "description": "구체적 내용과 범위 (2-3문장)"
         },
        "agent": {
          "agent_id": "원본 agent_id",
          "name": "원본 name", 
          "role": "원본 role",
          "goal": "원본 goal",
          "persona": "원본 persona",
          "tool_names": "원본 tool_names (배열)",
          "agent_profile": "원본 agent_profile (예: /src/assets/images/profile/user-1.jpg)",
          "model": "원본 model"
        },
        "task": {
           "description": "이전 컨텍스트와 피드백을 반영한 구체적 작업 지시. 원래 요구사항 최우선, 에이전트 전문성 활용, Markdown 형식",
           "expected_output": "Markdown 형식의 전문적 섹션 내용 (2000-3000단어). 실무 예시와 구체적 가이드라인 포함"
         }
      }
    ]
    
    **필수 사항**: agent_info 에이전트들 반드시 포함, 에이전트 정본 원본 그대로 반환, 값 없는 필드는 빈 문자열("")

  agent: toc_generator_and_agent_matcher 